{
	"info": {
		"_postman_id": "bb51b154-9734-4fea-a10e-fb6be8fc5e9d",
		"name": "buildA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "51921e31-86f2-43c2-8558-aa612d8e1f2c",
						"exec": [
							"const case_number = _.random(1, 10);",
							"",
							"console.info(case_number);",
							"for (var i = 0; i < case_number; i++) {",
							"    pm.test(`${pm.variables.get(\"test_type\")} case ${pm.variables.get(\"case_index\")} for request ${pm.variables.get(\"request_index\")} with build ${pm.variables.get(\"build_name\")}`, function () {",
							"        pm.response.to.have.status(200);",
							"    });",
							"    pm.variables.set(\"case_index\", 1 + Number(pm.variables.get(\"case_index\")));",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "847ff387-9c62-49ba-a3e6-0fc90fc22187",
						"exec": [
							"if (!pm.variables.get(\"build_name\")) {",
							"    pm.variables.set(\"build_name\", \"buildA\");",
							"}",
							"if (!pm.variables.get(\"test_type\")) {",
							"    pm.variables.set(\"test_type\", \"Smoke Testing\");",
							"}",
							"if (!pm.variables.get(\"case_index\")) {",
							"    pm.variables.set(\"case_index\", \"1\");",
							"}",
							"if (!pm.variables.get(\"request_index\")) {",
							"    pm.variables.set(\"request_index\", \"1\");",
							"} else {",
							"    pm.variables.set(\"request_index\", 1 + Number(pm.variables.get(\"request_index\")))",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/status/200",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"status",
						"200"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "51921e31-86f2-43c2-8558-aa612d8e1f2c",
						"exec": [
							"const case_number = _.random(1, 10);",
							"",
							"console.info(case_number);",
							"for (var i = 0; i < case_number; i++) {",
							"    pm.test(`${pm.variables.get(\"test_type\")} case ${pm.variables.get(\"case_index\")} for request ${pm.variables.get(\"request_index\")} with build ${pm.variables.get(\"build_name\")}`, function () {",
							"        pm.response.to.have.status(200);",
							"    });",
							"    pm.variables.set(\"case_index\", 1 + Number(pm.variables.get(\"case_index\")));",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "847ff387-9c62-49ba-a3e6-0fc90fc22187",
						"exec": [
							"if (!pm.variables.get(\"build_name\")) {",
							"    pm.variables.set(\"build_name\", \"buildA\");",
							"}",
							"if (!pm.variables.get(\"test_type\")) {",
							"    pm.variables.set(\"test_type\", \"Smoke Testing\");",
							"}",
							"if (!pm.variables.get(\"case_index\")) {",
							"    pm.variables.set(\"case_index\", \"1\");",
							"}",
							"if (!pm.variables.get(\"request_index\")) {",
							"    pm.variables.set(\"request_index\", \"1\");",
							"} else {",
							"    pm.variables.set(\"request_index\", 1 + Number(pm.variables.get(\"request_index\")))",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/status/200",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"status",
						"200"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}
